# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 15.x, 16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Run containers
      run:
        docker run -p 8000:8000 -d amazon/dynamodb-local:1.13.5
        && docker run -p 5000:5000 -d --restart always --name registry registry:2.7
        && docker run -p 27017:27017 -d mongo:4.0.6-xenial
        && docker run -p 6379:6379 -d redis:6.0.9
        && docker run -p 9200:9200 -d -m "512m" -e "discovery.type=single-node" -e "ES_JAVA_OPTS=-Xms256m -Xmx256m" docker.elastic.co/elasticsearch/elasticsearch:7.1.0
        && docker run -p 8182:8182 -d tinkerpop/gremlin-server:3.4.4
        && docker run -p 9000:9000 -d -e "MINIO_ACCESS_KEY=minioadmin" -e "MINIO_SECRET_KEY=minioadmin" minio/minio:edge-cicd server /data
        && docker run -p 4567:4567 -d saidsef/aws-kinesis-local:latest
        && docker pull node:15-alpine


    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm i && npx nyc --reporter=lcovonly npm test && npx codecov --token=3586c688-30cd-46be-a6c4-79a6e0f7fe80 --file=coverage/lcov.info && npm run lint
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
